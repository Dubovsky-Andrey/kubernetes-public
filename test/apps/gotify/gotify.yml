# Config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gotify-config
  namespace: test
data:
  GOTIFY_DEFAULTUSER_NAME: "user"
  GOTIFY_DEFAULTUSER_PASS: "pass"
  TZ: "Europe/Bucharest"

# PersistentVolume (PV)
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: gotify-pv
  labels:
    type: nfs
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs-storage
  nfs:
    path: /volume1/nfs/k8s-data/gotify
    server: 192.168.1.20


# PersistentVolumeClaim (PVC)
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gotify-pvc
  namespace: test
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: nfs-storage

# Deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gotify
  namespace: test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gotify
  template:
    metadata:
      labels:
        app: gotify
    spec:
      containers:
      - name: gotify
        image: ghcr.io/gotify/server:latest
        ports:
        - containerPort: 80
        envFrom:
        - configMapRef:
            name: gotify-config
        volumeMounts:
        - name: gotify-data
          mountPath: /app/data
      volumes:
      - name: gotify-data
        persistentVolumeClaim:
          claimName: gotify-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: gotify
  namespace: test
spec:
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30674 # Если нужен фиксированный NodePort
  selector:
    app: gotify
  type: LoadBalancer
  loadBalancerIP: 192.168.1.56